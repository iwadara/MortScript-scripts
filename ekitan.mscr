# ----------------------------------------
# Name:    ekitan.mscr(rev2.5)
# Author:  いわだら
# Date:    2009/01/20 00:00
# Version: MortScript-4.1-PPC
#
# ToDo:
# - エラー処理の強化
# ----------------------------------------

# ◆◆◆ ユーザー設定項目 ここから ◆◆◆
# (1)保存するHTMLファイル名(デフォルト: "ekitan.htm.txt")
htmName = "ekitan.htm.txt"
# (2)保存するテキストファイル名(デフォルト: "ekitan.log.txt")
txtName = "ekitan.log.txt"
# (3)保存する検索履歴ファイル名(デフォルト: "ekitan.hist.txt")
histName = "ekitan.hist.txt"
# (4)結果表示数(デフォルト: 3件)
ResNum = 3
# (5)結果をクリップボードに格納する(ON/OFF)
UseClip = OFF
# (6)結果をテキストエディタで開く(ON/OFF)
UseRun = ON
# (7)ダイアルソフトを使って自動接続ON/OFFを行うか → 0:無効, 1:有効(アドエスv1.01a以上), 2:有効(それ以外)
InetSetting = 0
# (7-A)[ダイアルソフト指定] harddial使用時は以下の1行の # をはずす
#InetPath = "\Program Files\harddial\harddial.exe"
# (7-B)[ダイアルソフト指定] WkTASK使用時は以下の2行の # をはずす
#InetPath = "\Program Files\WkTask\WkTaskCmd.exe"
#InetParam = "/o"
# (8)路線検索エンジンURLパス(Google マップの乗換案内)
urlPath = "http://www.google.co.jp/transit?output=mobile"
# (8-A)解析する文字コード → 文字化けした結果が表示された場合, # を切り替えて読み取り時のエンコードを変更してください
Encode = "jis"
#Encode = "utf8-prefix"
# (9)検索履歴の最大保存数
histListMax = 20
# (10)[mailmode] メーラーの実行ファイルパス(使うメーラーのみ # をはずす、全てコメントアウトされているとURLをクリップボードにコピー)
# ・W-ZERO3メール
#stmail_exe = "\Windows\STMail.exe"
# ・QMAIL3
#qmail_exe = "\Program Files\QMAIL3\q3u.exe"
# ・SpeedMail
#speedmail_exe = "\Program Files\SpeedMail\SpeedMail.exe"
# (10-A)[mailmode] QMAIL3 保存するメール作成ファイル名(デフォルト: "ekitan.mail.txt")
mailName = "ekitan.mail.txt"
# (10-B)[mailmode] QMAIL3 送信アカウント、自身が設定したアカウント名を入力
qmail_account = "WILLCOM"
# (10-C)[mailmode] QMAIL3 エンコーディング
qmail_type = "text/plain; charset=iso-2022-jp"
# (10-D)[mailmode] QMAIL3 メール送信時の巡回先、あらかじめ QMAIL3 の [オプション] - [巡回] で追加しておく必要がある、設定した巡回先を入力して # をはずす
#qmail_goround = "自動送受信"
# (11)[mailmode] 送信先(デフォルト: メール銀河 ginga@yuki-lab.jp)
mail_to = "ginga@yuki-lab.jp"
# ◆◆◆ ユーザー設定項目 ここまで ◆◆◆

# ◆ Tips 1 ◆
# 引数に saddr=(乗車駅), daddr=(下車駅) をつけて起動できます
# 例: 横浜から川崎.lnk
# "\Program Files\MortScript\MortScript.exe" "\My Documents\Mscr\ekitan.mscr" saddr="横浜" daddr="川崎"
# ◆ Tips 2 ◆
# 駅名選択画面で乗車・下車駅を空のままOKを押すことで最近20件の検索履歴選択モードに移ります
# また, 起動時の引数に histmode=1 をつけて起動することで検索履歴選択モードから起動できます
# "\Program Files\MortScript\MortScript.exe" "\My Documents\Mscr\ekitan.mscr" histmode=1
# ◆ Tips 3 ◆
# 起動時の引数に mailmode=1 をつけて起動することで、メールモードに移ります
# 駅名を設定後、ユーザー設定項目で指定したメーラーで検索結果を送受信できます
# histmode=1 とも共存できます
# "\Program Files\MortScript\MortScript.exe" "\My Documents\Mscr\ekitan.mscr" mailmode=1 histmode=1
# ◆ Tips 4 ◆
# ViewText(Todayプラグイン)との連携で, Today上に検索結果を表示しておくことができます
# ★自動でTodayに結果表示 
#   ViewTextで検索結果テキストファイルを指定します(デフォルト: ekitan.mscrと同じフォルダのekitan.log.txtを指定)
# ☆手動でTodayに結果表示 
#   ViewTextで「クリップボードから貼り付け」を行います(結果はクリップボードにも格納されています)
# ◆ Tips End ◆

# デバッグ用(URL出力, 履歴一致確認)
#DEBUG = ON

# (labs) 何分前に出ればいいかも出力
# ※Googleが返すhtmlをみてエイヤ！で計算しているため、完全α実装であることに注意
# → DateToUnixtime.mscrが見つかった場合、家を出てから駅にたどり着くまでの時間の入力画面に現れる
# DateToUnixtime.mscr が必須(同じフォルダに置く場合はこのまま)
DateToUnixtime_mscr = SystemPath( "ScriptPath" ) \ "DateToUnixtime.mscr"

# PC用接続(オンライン判定なし)
mortType = MortScriptType()
#Message( mortType )
If( mortType eq "PC" )
	forPC = ON
EndIf

# 自動接続 ON
If( ( InetSetting > 0 ) AND ( mailmode = 0 ) )
	Call chk_online
	If( NOT( is_online ) )
		Run( InetPath, InetParam )
	EndIf
EndIf

# 必要となるスクリプト名を取得
htmPath =  SystemPath( "ScriptPath" ) \ htmName
txtPath =  SystemPath( "ScriptPath" ) \ txtName
histPath = SystemPath( "ScriptPath" ) \ histName
mailPath = SystemPath( "ScriptPath" ) \ mailName
thisName = SystemPath( "ScriptName" ) & SystemPath( "ScriptExt" )

# histmode 引数が渡されて起動した場合, 履歴選択モードに移る
If( histmode )
	Call choice_history
EndIf

# 現在の時刻をセット
GetTime( hh, mi, ss, DD, MM, YYYY )

# 乗車・降車駅がセットされるまで 駅名選択 → 履歴表示 の繰り返し
EkiSetting = FALSE
While( EkiSetting = FALSE )
	Call ekiInput
EndWhile

# 出力文字列の生成
time_all = TimeStamp()
Call make_urlPath
If( DEBUG )
	Message( "[DEBUG] URL^NL^---^NL^" & urlPath, thisName )
EndIf
If( mailmode )
	Call exec_mailmode
EndIf

# ネットワーク接続確認
Call chk_online
While( NOT( is_online ) )
	If( Question( \
		"オフライン:^NL^接続を行ってください.", \
		thisName, "RetryCancel" ) = CANCEL )
		Call ekiExit
	Else
		Call chk_online
	EndIf
EndWhile

# HTMLファイルの取得, 保存
time_download = TimeStamp()
Download( urlPath, htmPath )
text = ReadFile( htmPath, 0, Encode )
If( Length( text ) = NULL )
	Call ekiExit
EndIf

# HTMLをテキスト用に変換
time_convert = TimeStamp()
Call html2text

# 時間集計
time_END = TimeStamp()
# Download時間だけはtime_ENDでなく、time_convertから計算
time_download = time_convert - time_download
time_convert = time_END - time_convert
time_all = time_END - time_all
text = text & "All search time: " & time_all & "sec.^LF^"
text = text & "Convert time:    " & time_convert & "sec.^LF^"
text = text & "Download time:   " & time_download & "sec.^LF^"
WriteFile( txtPath, text )

# ViewText向けにTodayを再描画(すぐにテキストを反映)
If( NOT( forPC ) )
	RedrawToday
EndIf

# 結果をテキストで開く
If( UseRun )
	Run( txtPath )
EndIf

# 検索履歴ファイルに検索した乗車・降車駅を追記
Call add_history

# 正常終了
Call ekiExit

# ----------------------------------------
#  ▽ Sub
# ----------------------------------------
# 終了処理
Sub ekiExit
	# 自動接続 OFF
	If( InetSetting > 0 )
		Call chk_online
		If( is_online )
			Run( InetPath, InetParam )
		EndIf
	EndIf

	Exit
EndSub

# 駅名選択
Sub ekiInput
	fbool = FileExists( DateToUnixtime_mscr )
	If( ( fbool ) AND ( NOT( mailmode )) )
		firstDepInput = "^NL^(9)乗車駅までかかる時間(分)="
	EndIf

	foo = Input( "■Google マップ乗換案内スクリプト^NL^乗車・降車駅を入力してください.", \
	thisName, 0, 1, \
	"(1)乗車=" & saddr & "^NL^" & \
	"(2)降車=" & daddr & "^NL^" & \
	"(3)時間=" & hh & mi & "^NL^" & \
	"(4)発・着・終電(0:発 1:着 2:終電)=0^NL^" & \
	"(5)表示順(0:時間 1:料金 2:乗換回数)=0^NL^" & \
	"(6)結果表示数(件)=" & ResNum & "^NL^" & \
	"(7)有料特急(1:使わない)=^NL^" & \
	"(8)飛行機(1:使わない)=" & \
	firstDepInput )
	# Cancel を押したら終了
	If( foo eq NULL )
		Call ekiExit
	EndIf

	# 入力文字列の取得(inArray)
	i = 1
	ForEach line in split ( foo, "^LF^", 0 )
		# イコールの後ろの文字列をゲットする
		inArray[i] = Part( line, "=", 2 )
		i = i + 1
	EndForEach

	# 乗車駅[1]か下車駅[2]が未入力ならば履歴選択
	If( ( inArray[1] eq NULL ) OR ( inArray[2] eq NULL ) )
		time_enterbug = TimeStamp()

		Call choice_history

		# MortScript使用中のEnterボタン確定時の不具合対策(v4.0, v4.1で発生する)
		# → 関数コールから 2 秒未満で確定された場合、再コールする
		If( ( histNum = 1 ) AND \
			( ( TimeStamp() - time_enterbug ) < 2 ) )
			#Message( "おそらく、Enterでの確定呼び出しと判定(リコールします)" )
			Call choice_history
		EndIf
	Else
		EkiSetting = TRUE
	EndIf
EndSub

# 接続チェック(W-SIM, 無線LAN, ActiveSync)
# [out] is_online
Sub chk_online
	wsim = RegRead("HKLM", "System\State\Phone", "Status")
	rapi = RegRead("HKLM", "System\State\Hardware", "Cradled")

	# 無線LAN判定はアドエスv1.01a以上だけ特殊
	If( InetSetting = 1)
		wlan = RegRead("HKLM", "System\State\Hardware", "WiFi")
		If( wlan = 1 )
			wlan = 0
		EndIf
	Else
		wlan = RegRead("HKLM", "System\State\Hardware", "WiFi")
	EndIf

	If( wsim OR wlan OR rapi OR forPC )
		is_online = true
	Else
		is_online = false
	EndIf
EndSub

# [in] text, [out] text
Sub html2text
	# 検索結果の1番目は出発時間を記憶する → 家を出る時間を計算
	If( firstDepChk > 0 )
		firstDepStr = "<a name=""route0"" href=""#route0"" accesskey=""1"">1) </a><font color=""#008000"">"
		x = Find( text, firstDepStr )
	 	x = x + Length(firstDepStr)
		If( x > 0 )
			y = Find( text, "&rarr", x )
			If( y > x )
				firstDepTime = SubStr( text, x, y - x )
				Split( firstDepTime , ":", 1, firstDepHour, firstDepMin )
				#Message( firstDepHour & ":" & firstDepMin )				
				CallScriptFunction( DateToUnixtime_mscr, \
					DateToUnixtime, YYYY, MM, DD, firstDepHour, firstDepMin, 0 )  
				firstDepTime = FormatTime( "H:i", DateToUnixtime - ( firstDepChk * 60 ) )
				firstDepResult = "[from ekitan.mscr] " & saddr & "から" & daddr & "に行くためには " & firstDepTime & " に家をでましょう(" &  firstDepChk & "分後に電車に乗ります)^LF^^LF^"
				Message( firstDepResult )
				text = Replace( text, firstDepStr, firstDepResult )
			EndIf
		EndIf
	EndIf

	# 文字列置換
	text = Replace( text, "<br />", "^LF^" )
	text = Replace( text, "&rArr;", "→" )
	text = Replace( text, "&rarr;", "→" )

	# あとは頻度の多そうなタグ順にNULL
	text = Replace( text, "&nbsp;", NULL )
	text = Replace( text, "<font color=""#008000"">", NULL )
	text = Replace( text, "<font color=""#000080"">", NULL )
	text = Replace( text, "</table>", NULL )
	text = Replace( text, "<table>", NULL )
	text = Replace( text, "</small>", NULL )
	text = Replace( text, "<small>", NULL )
	text = Replace( text, "</font>", NULL )
	text = Replace( text, "<tr bgcolor=""#e5ecf9"">", NULL )
	text = Replace( text, "<img src=""http://www.google.com/mapfiles/transit/ui/leg-icon-rail.gif"" />", NULL )
	text = Replace( text, "</tr>", NULL )
	text = Replace( text, "<tr>", NULL )
	text = Replace( text, "</td>", NULL )
	text = Replace( text, "<td>", NULL )
	text = Replace( text, "</div>", NULL )
	text = Replace( text, "<div>", NULL )
	text = Replace( text, "</option>", NULL )
	text = Replace( text, "</select>", NULL )
	text = Replace( text, "<span style=""font:smaller"">", NULL )
	text = Replace( text, "</span>", NULL )
	text = Replace( text, "</a>", NULL )
	text = Replace( text, "<hr />", NULL )
	text = Replace( text, "</form>", NULL )

	# 1個くらいしかなさそうなタグ(仕様変更されたらすぐに意味なくなるかも)
	# TODO: あまりに変更が多いようなら, xml記述のencodingを見てReadFileのエンコード指定を行うように対応する
	text = Replace( text, "<?xml version=""1.0"" encoding=""UTF-8""?>", NULL )
	text = Replace( text, "<?xml version=""1.0"" encoding=""Shift_JIS""?>", NULL )
	text = Replace( text, "<!DOCTYPE html PUBLIC ""-//WAPFORUM//DTD XHTML Mobile 1.0//EN"" ""http://www.wapforum.org/DTD/xhtml-mobile10.dtd"">", NULL )
	text = Replace( text, "<html xmlns=""http://www.w3.org/1999/xhtml"">", NULL )
	text = Replace( text, "<img src=""http://www.google.co.jp/images/transit_mobile_logo.gif"" alt=""Google Local"" />", NULL )
	text = Replace( text, "<a name=""top"">", NULL )
	text = Replace( text, "<a href=""#refinement"">", NULL )
	text = Replace( text, "</p>", NULL )
	text = Replace( text, "<p>", NULL )
	text = Replace( text, "<center>", NULL )
	text = Replace( text, "</center>", NULL )
	text = Replace( text, "</title>", NULL )
	text = Replace( text, "<title>", NULL )
	text = Replace( text, "</head>", NULL )
	text = Replace( text, "<head>", NULL )
	text = Replace( text, "</body>", NULL )
	text = Replace( text, "<body>", NULL )
	text = Replace( text, "</html>", NULL )
	text = Replace( text, "<html>", NULL )

	# "<"で始まり, ">"で終わる箇所はカット
	buf = ""
	x = Find( text, "<" )
	While( x > 0 )
		If( x > 1 )
			buf = buf & SubStr( text, 1, x - 1 )
		EndIf
		y = Find( text, ">" )
		If( y > x )
			text = SubStr( text, y + 1 )
		EndIf
		x = Find( text, "<" )
	EndWhile
	text = buf

	# クリップボードにセット
	If( UseClip )
		SetClipText( text )
	EndIf
EndSub

# 出力文字列の生成(urlPath)
# ex.			in	out	summary
# ----------------------------------------------
# saddr=toukyou		1	1	乗車
# daddr=yokohama	2	2	下車
# time=2037		3	3	時・分(hhmm)
# ttype=arr		4	4	時刻発着指定 0:発(dep) 1:着(arr) 2:終電(last)
# sort=0		5	5	表示順 0:時間(time) 1:料金(fare) 2:乗換回数(num)
# num=3			6	6	結果表示数
# noexp=1		7	7	有料特急を使わない
# noal=1		8	8	飛行機を使わない
# firstDepChk=1		9	9	[特殊param] 現在地から乗車駅までの時間(分)
Sub make_urlPath
	i = 1
	ForEach var in values ( "saddr", "daddr", "time", "ttype", "sort", "num", "noexp", "noal", "firstDepChk" )
		Switch( i )
		Case( 1 )
			saddr = inArray[1]
			urlPath = urlPath & "&" & var & "=" & saddr
		Case( 2 )
			daddr = inArray[2]
			urlPath = urlPath & "&" & var & "=" & daddr
		Case( 3 )
			urlPath = urlPath & "&" & var & "=" & inArray[3]
		Case( 4 )
			If( ( inArray[4] ) = 0 )
				urlPath = urlPath & "&" & var & "=" & "dep"
			EndIf
			If( ( inArray[4] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "arr"
			EndIf
			If( ( inArray[4] ) = 2 )
				urlPath = urlPath & "&" & var & "=" & "last"
			EndIf
		Case( 5 )
			If( ( inArray[5] ) = 0 )
				urlPath = urlPath & "&" & var & "=" & "time"
			EndIf
			If( ( inArray[5] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "fare"
			EndIf
			If( ( inArray[5] ) = 2 )
				urlPath = urlPath & "&" & var & "=" & "num"
			EndIf
		Case( 6 )
			urlPath = urlPath & "&" & var & "=" & inArray[6]
		Case( 7 )
			If( ( inArray[7] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "1"
			EndIf
		Case( 8 )
			If( ( inArray[8] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "1"
			EndIf
		Case( 9 )
			If( ( inArray[9] ) > 0 )
				firstDepChk = inArray[9]
			EndIf
		EndSwitch
	    i = i + 1
	EndForEach
EndSub

# 履歴ファイルが存在する場合 → 履歴を選択して乗車・降車駅をセット
# [in]  histPath
# [out] saddr, daddr, histNum
Sub choice_history
	If( FileExists( histPath ) )
		histList = ReadFile( histPath )
		histArray = Split( histList , "^NL^" )
		histNum = Choice( thisName, \
			"■Google マップ乗換案内スクリプト^NL^検索履歴から乗車・降車駅を選択.", \
			1, 15, histArray)
		fromTo = Split( histArray[histNum] , "から" )
		saddr = fromTo[1]
		daddr = fromTo[2]
	Else
		Message( "履歴ファイルがありません.^NL^乗車・降車駅を入力してください.", thisName )
	EndIf
EndSub

# 今回の検索結果を履歴ファイルに追記
# [in]  histPath, saddr, daddr
# [out] -
Sub add_history
	histList = NULL
	If( FileExists( histPath ) )
		histList = ReadFile( histPath )
	EndIf

	histWrite = saddr & "から" & daddr
	histWriteAdd = NULL
	i = 1
	ForEach line in split ( histList, "^NL^", 0 )
		If( ( line eq histWrite ) OR ( line eq NULL ) )
			# 同じ駅名か空欄の場合はスキップ
			If( DEBUG )
				Message( "i=" & i & "^NL^histWrite=" & histWrite & "^NL^line=" & line, \
					"[DEBUG] 履歴一致, 空欄確認" )
			EndIf
		Else
			If( i < histListMax )
				histWriteAdd = histWriteAdd & "^NL^" & line
				i = i + 1
			EndIf
		EndIf
	EndForEach
	WriteFile( histPath, histWrite & histWriteAdd )
EndSub

# メールモード実行
Sub exec_mailmode
	Call add_history

	# ・W-ZERO3メール
	If( stmail_exe ne NULL )
		# STMailは & を %26 で表現しないと引数がうまく渡せない
		stmail_url = Replace( urlPath, "&", "%26" )
		stmail_args = "mailto:" & mail_to & "?body=" & stmail_url
		Run( stmail_exe, stmail_args )
	# ・QMAIL3
	ElseIf( qmail_exe ne NULL )
		foo = Input( "■Google マップ乗換案内スクリプト^NL^QMAIL3からメールを送信しますか？^NL^巡回先: " & qmail_goround, \
		thisName, 0, 1, \
		"To: "              & mail_to       & "^NL^" & \
		"Subject: "                         & "^NL^" & \
		"Content-Type: "    & qmail_type    & "^NL^" & \
		"X-QMAIL-Account: " & qmail_account & "^NL^" & \
		"^NL^" & urlPath )
		# Cancel を押したらクリップボードにURLをコピーして終了
		If( foo eq NULL )
			SetClipText( urlPath )
			Message( "クリップボードにURLをコピーしました.^NL^^NL^" & urlPath, thisName )
			Call ekiExit
		EndIf
		WriteFile( mailPath, foo )
		qmail_args = "-c " & """" & mailPath & """" & " -q"
		RunWait( qmail_exe, qmail_args )

		# 巡回
		If( qmail_goround ne NULL )
			Run( qmail_exe, "-g """ & qmail_goround & """ -q -f" )
		EndIf
	# ・SpeedMail
	ElseIf( speedmail_exe ne NULL )
		speedmail_args = mail_to & " /t" & urlPath
		Run( speedmail_exe, speedmail_args )
	Else
		SetClipText( urlPath )
		Message( "クリップボードにURLをコピーしました.^NL^^NL^" & urlPath, thisName )
	EndIf
	Call ekiExit
EndSub
