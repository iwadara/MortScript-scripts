# ----------------------------------------
# Name:    ekitan.mscr(rev2.3)
# Author:  いわだら
# Date:    2008/12/18 22:21
# Version: MortScript-4.1-PPC
#
# ToDo:
# - エラー処理の強化
# - 前回入力値の記憶(引数なし起動時)
# - 履歴管理(10回前まで上書きせずに保存)
# - 入力画面が出たらカーソルを最適位置に
# ----------------------------------------

# ◆◆◆ ユーザー設定項目 ここから ◆◆◆
# (1)結果の保存先フォルダ(デフォルト: ekitan.mscrと同じフォルダ)
folPath = SystemPath( "ScriptPath" )
# (2)保存するHTMLファイル名(デフォルト: "ekitan.htm.txt")
htmName = "ekitan.htm.txt"
# (3)保存するテキストファイル名(デフォルト: "ekitan.log.txt")
txtName = "ekitan.log.txt"
# (4)結果表示数(デフォルト: 3件)
ResNum = 3
# (5)結果をクリップボードに格納する(ON/OFF)
UseClip = ON
# (6)結果をテキストエディタで開く(ON/OFF)
UseRun = ON
# (7)ダイアルソフトを使って自動接続ON/OFFを行うか → 0:無効, 1:有効(アドエスv1.01a以上), 2:有効(それ以外)
InetSetting = 1
# (7-A)[ダイアルソフト指定] harddial使用時は以下の1行の # をはずす
#InetPath = "\Program Files\harddial\harddial.exe"
# (7-B)[ダイアルソフト指定] WkTASK使用時は以下の2行の # をはずす
#InetPath = "\Program Files\WkTask\WkTaskCmd.exe"
#InetParam = "/o"
# (8)解析する文字コード → 文字化けした結果が表示された場合、# を切り替えて読み取り時のエンコードを変更してください
Encode = "jis"
#Encode = "utf8-prefix"
# ◆◆◆ ユーザー設定項目 ここまで ◆◆◆

# ◆ Tips 1 ◆
# 引数に saddr=(乗車駅), daddr=(下車駅) をつけて起動できます(両方指定でも可)
# 例: 横浜から川崎.lnk
# "\Program Files\MortScript\MortScript.exe" "\My Documents\Mscr\ekitan.mscr" saddr="横浜" daddr="川崎"
# ◆ Tips 2 ◆
# ViewText(Todayプラグイン)との連携で、Today上に検索結果を表示しておくことができます
# ★自動でTodayに結果表示 
#   ViewTextで検索結果テキストファイルを指定します(デフォルト: ekitan.mscrと同じフォルダのekitan.log.txtを指定)
# ☆手動でTodayに結果表示 
#   ViewTextで「クリップボードから貼り付け」を行います(結果はクリップボードにも格納されています)
# ◆ Tips End ◆

# デバッグ用(urlPathの出力)
#DEBUG = ON
# PC用接続(オンライン判定なし)
#forPC = ON

# 自動接続 ON
If( InetSetting > 0 )
	Call chk_online
	If( NOT( is_online ) )
		Run( InetPath, InetParam )
	EndIf
EndIf

# 保存ファイルパスの確定
htmPath = folPath \ htmName
txtPath = folPath \ txtName

# 路線検索エンジンURLパス(Google マップの乗換案内)
urlPath = "http://www.google.co.jp/transit?output=mobile"

# 現在の時刻をセット
GetTime( hh, mi, ss, DD, MM, YYYY )
# スクリプト名を取得
thisName = SystemPath( "ScriptName" ) & SystemPath( "ScriptExt" )

foo = Input( "■Google マップ乗換案内スクリプト^NL^乗車・降車駅を入力してください.", \
thisName, 0, 1, \
"(1)乗車=" & saddr & "^NL^" & \
"(2)降車=" & daddr & "^NL^" & \
"(3)時間=" & hh & mi & "^NL^" & \
"(4)発・着・終電(0:発 1:着 2:終電)=0^NL^" & \
"(5)表示順(0:時間 1:料金 2:乗換回数)=0^NL^" & \
"(6)結果表示数(件)=" & ResNum & "^NL^" & \
"(7)有料特急(1:使わない)=^NL^" & \
"(8)飛行機(1:使わない)=" )
# Cancel を押したら終了
If( foo eq NULL )
	Call ekiExit
EndIf

# 入力文字列の取得(inArray)
i = 1
ForEach line in split ( foo, "^LF^", 0 )
	# イコールの後ろの文字列をゲットする
	inArray[i] = Part( line, "=", 2 )
	i = i + 1
EndForEach

# 出力文字列の生成
Call make_urlPath
If( DEBUG )
	Message( urlPath, "DEBUG" )
EndIf

Call chk_online
While( NOT( is_online ) )
	If( Question( \
		"オフライン:^NL^接続を行ってください.", \
		thisName, "RetryCancel" ) = CANCEL )
		Call ekiExit
	Else
		Call chk_online
	EndIf
EndWhile

# HTMLファイルの取得, 保存
Download( urlPath, htmPath )
text = ReadFile( htmPath, 0, Encode )
If( Length( text ) = NULL )
	Call ekiExit
EndIf

# HTMLをテキスト用に変換
time_chk = TimeStamp()
Call html2text
time_chk = TimeStamp() - time_chk
text = text & "Convert time: " & time_chk & "sec.^LF^"

WriteFile( txtPath, text )
# ViewText向けにTodayを再描画(すぐにテキストを反映)
If( NOT( forPC ) )
	RedrawToday
EndIf
# 結果をテキストで開く
If( UseRun )
	Run( txtPath )
EndIf
Call ekiExit

# 終了処理
Sub ekiExit
	# 自動接続 OFF
	If( InetSetting > 0 )
		Call chk_online
		If( is_online )
			Run( InetPath, InetParam )
		EndIf
	EndIf

	Exit
EndSub

# 接続チェック(W-SIM, 無線LAN, ActiveSync)
# [out] is_online
Sub chk_online
	wsim = RegRead("HKLM", "System\State\Phone", "Status")
	rapi = RegRead("HKLM", "System\State\Hardware", "Cradled")

	# 無線LAN判定はアドエスv1.01a以上だけ特殊
	If( InetSetting = 1)
		wlan = RegRead("HKLM", "System\State\Hardware", "WiFi")
		If( wlan = 1 )
			wlan = 0
		EndIf
	Else
		wlan = RegRead("HKLM", "System\State\Hardware", "WiFi")
	EndIf

	If( wsim OR wlan OR rapi OR forPC )
		is_online = true
	Else
		is_online = false
	EndIf
EndSub

# [in] text, [out] text
Sub html2text
	# 文字列置換
	text = Replace( text, "<br />", "^LF^" )
	text = Replace( text, "&rArr;", "→" )
	text = Replace( text, "&rarr;", "→" )

	# あとは頻度の多そうなタグ順にNULL
	text = Replace( text, "&nbsp;", NULL )
	text = Replace( text, "<font color=""#008000"">", NULL )
	text = Replace( text, "<font color=""#000080"">", NULL )
	text = Replace( text, "</table>", NULL )
	text = Replace( text, "<table>", NULL )
	text = Replace( text, "</small>", NULL )
	text = Replace( text, "<small>", NULL )
	text = Replace( text, "</font>", NULL )
	text = Replace( text, "<tr bgcolor=""#e5ecf9"">", NULL )
	text = Replace( text, "<img src=""http://www.google.com/mapfiles/transit/ui/leg-icon-rail.gif"" />", NULL )
	text = Replace( text, "</tr>", NULL )
	text = Replace( text, "<tr>", NULL )
	text = Replace( text, "</td>", NULL )
	text = Replace( text, "<td>", NULL )
	text = Replace( text, "</div>", NULL )
	text = Replace( text, "<div>", NULL )
	text = Replace( text, "</option>", NULL )
	text = Replace( text, "</select>", NULL )
	text = Replace( text, "<span style=""font:smaller"">", NULL )
	text = Replace( text, "</span>", NULL )
	text = Replace( text, "</a>", NULL )
	text = Replace( text, "<hr />", NULL )
	text = Replace( text, "</form>", NULL )

	# 1個くらいしかなさそうなタグ(仕様変更されたらすぐに意味なくなるかも)
	# TODO: あまりに変更が多いようなら、xml記述のencodingを見てReadFileのエンコード指定を行うように対応する
	text = Replace( text, "<?xml version=""1.0"" encoding=""UTF-8""?>", NULL )
	text = Replace( text, "<?xml version=""1.0"" encoding=""Shift_JIS""?>", NULL )
	text = Replace( text, "<!DOCTYPE html PUBLIC ""-//WAPFORUM//DTD XHTML Mobile 1.0//EN"" ""http://www.wapforum.org/DTD/xhtml-mobile10.dtd"">", NULL )
	text = Replace( text, "<html xmlns=""http://www.w3.org/1999/xhtml"">", NULL )
	text = Replace( text, "<img src=""http://www.google.co.jp/images/transit_mobile_logo.gif"" alt=""Google Local"" />", NULL )
	text = Replace( text, "<a name=""top"">", NULL )
	text = Replace( text, "<a href=""#refinement"">", NULL )
	text = Replace( text, "</p>", NULL )
	text = Replace( text, "<p>", NULL )
	text = Replace( text, "<center>", NULL )
	text = Replace( text, "</center>", NULL )
	text = Replace( text, "</title>", NULL )
	text = Replace( text, "<title>", NULL )
	text = Replace( text, "</head>", NULL )
	text = Replace( text, "<head>", NULL )
	text = Replace( text, "</body>", NULL )
	text = Replace( text, "<body>", NULL )
	text = Replace( text, "</html>", NULL )
	text = Replace( text, "<html>", NULL )

	# "<"で始まり、 ">"で終わる箇所はカット
	buf = ""
	x = Find( text, "<" )
	While( x > 0 )
		If( x > 1 )
			buf = buf & SubStr( text, 1, x - 1 )
		EndIf
		y = Find( text, ">" )
		If( y > x )
			text = SubStr( text, y + 1 )
		EndIf
		x = Find( text, "<" )
	EndWhile
	text = buf

	# クリップボードにセット
	If( UseClip )
		SetClipText( text )
	EndIf
EndSub

# 出力文字列の生成(urlPath)
# ex.			in	out	summary
# ----------------------------------------------
# saddr=toukyou		1	1	乗車
# daddr=yokohama	2	2	下車
# time=2037		3	3	時・分(hhmm)
# ttype=arr		4	4	時刻発着指定 0:発(dep) 1:着(arr) 2:終電(last)
# sort=0		5	5	表示順 0:時間(time) 1:料金(fare) 2:乗換回数(num)
# num=3			6	6	結果表示数
# noexp=1		7	7	有料特急を使わない
# noal=1		8	8	飛行機を使わない
Sub make_urlPath
	i = 1
	ForEach var in values ( "saddr", "daddr", "time", "ttype", "sort", "num", "noexp", "noal" )
		Switch( i )
		Case( 1 )
			urlPath = urlPath & "&" & var & "=" & inArray[1]
		Case( 2 )
			urlPath = urlPath & "&" & var & "=" & inArray[2]
		Case( 3 )
			urlPath = urlPath & "&" & var & "=" & inArray[3]
		Case( 4 )
			If( ( inArray[4] ) = 0 )
				urlPath = urlPath & "&" & var & "=" & "dep"
			EndIf
			If( ( inArray[4] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "arr"
			EndIf
			If( ( inArray[4] ) = 2 )
				urlPath = urlPath & "&" & var & "=" & "last"
			EndIf
		Case( 5 )
			If( ( inArray[5] ) = 0 )
				urlPath = urlPath & "&" & var & "=" & "time"
			EndIf
			If( ( inArray[5] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "fare"
			EndIf
			If( ( inArray[5] ) = 2 )
				urlPath = urlPath & "&" & var & "=" & "num"
			EndIf
		Case( 6 )
			urlPath = urlPath & "&" & var & "=" & inArray[6]
		Case( 7 )
			If( ( inArray[7] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "1"
			EndIf
		Case( 8 )
			If( ( inArray[8] ) = 1 )
				urlPath = urlPath & "&" & var & "=" & "1"
			EndIf
		EndSwitch
	    i = i + 1
	EndForEach
EndSub
