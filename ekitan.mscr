# ekitan.mscr	rev1.0
# ToDo
# - 同じ名前の駅が複数ある場合に選択できるように
# - 前回入力値の記憶
# - 履歴管理(10回前まで上書きせずに保存)
# - 自動接続/切断
# - 入力画面が出たらカーソルを最適位置に
# - mpTodayとの連携(Today上に結果表示)
# - エラー処理の強化

# ◆◆◆ ユーザー設定項目 ここから ◆◆◆
# (1)乗車駅のデフォルト設定(ない場合は "" のまま)
GetOn	= ""
# (2)降車駅のデフォルト設定(ない場合は "" のまま)
GetOut	= ""
# (3)保存するHTMLファイルのパス
htmPath = SystemPath( "ScriptPath" ) \ "ekitan.htm.txt"
# (4)保存するテキストファイルのパス
txtPath = SystemPath( "ScriptPath" ) \ "ekitan.log.txt"
# (5)結果表示数(デフォルト:3件)
ResNum = 3
# (6)結果をクリップボードに格納する(ON:デフォルト/OFF)
UseClip = ON
# ◆◆◆ ユーザー設定項目 ここまで ◆◆◆

# 路線検索エンジンURLパス(駅前探険倶楽部SS)
urlPath = "http://www8.ekitan.com/ss/N2?an=-1"
# 現在の時刻をセット
GetTime( hh, mi, ss, DD, MM, YYYY )
# スクリプト名を取得
thisName = SystemPath( "ScriptName" ) & SystemPath( "ScriptExt" )

foo = Input( "■駅探 路線検索スクリプト^NL^乗車・降車駅を入力してください.", \
thisName, 0, 1, \
"(1)乗車=" & GetOn & "^NL^" & \
"(2)降車=" & GetOff & "^NL^" & \
"(3)出発日付=" & YYYY & MM & DD & "^NL^" & \
"(4)時間=" & hh & mi & "^NL^" & \
"(5)発・着(0:発 1:着)=0^NL^" & \
"(6)表示順(0:時間 1:料金 2:乗換回数)=0^NL^" & \
"(7)100km以下特急利用(0:しない 1:する)=0^NL^" & \
"(8)結果表示数(件)=" & ResNum & "^NL^" & \
"(9)優先航空(0:なし 1:JAL 2:ANA 4:SKY/ADO)=0" )
# Cancel を押したら終了
If( foo eq NULL )
	Exit
EndIf

# 入力文字列の取得(inArray)
i = 1
ForEach line in split ( foo, "^LF^", 0 )
	# イコールの後ろの文字列をゲットする
	inArray[i] = Part( line, "=", 2 )
	i = i + 1
EndForEach

# ex.			in	out	summary
# ------------------------------
# sf=toukyou	1	1	乗車
# st=yokohama	2	2	下車
# YEAR=200704	3+	3	出発年月
# DAY=16		3+	4	出発日
# hour=20		4+	5	時
# min1=3		4+	6	分(10の位)
# min2=7		4+	7	分(1の位)
# sr=0			5	8	時刻発着指定 0:発 1:着
# rp=0			6	9	表示順 0:所要時間 1:料金 2:乗換回数
# ep=0			7	10	100km以下特急利用 0:しない 1:する
# pn=3			8	11	結果表示数
# air=0			9	12	優先航空(0:なし 1:JAL 2:ANA 4:SKY/ADO)=0" )

# 出力文字列の生成(urlPath)
i = 1
ForEach var in values ( "sf", "st", "YEAR", "DAY", "hour", "min1", "min2", "sr", "rp", "ep", "pn", "air" )
	Switch( i )
	Case( 1 )
		urlPath = urlPath & "&" & var & "=" & inArray[1]
	Case( 2 )
		urlPath = urlPath & "&" & var & "=" & inArray[2]
	Case( 3 )
		If( Length( inArray[3] ) = 8 )
			urlPath = urlPath & "&" & var & "=" & SubStr( inArray[3], 1, 6 )
		EndIf
	Case( 4 )
		If( Length( inArray[3] ) = 8 )
			urlPath = urlPath & "&" & var & "=" & SubStr( inArray[3], 7, 2 )
		EndIf
	Case( 5 )
		If( Length( inArray[4] ) = 4 )
			urlPath = urlPath & "&" & var & "=" & SubStr( inArray[4], 1, 2 )
		EndIf
	Case( 6 )
		If( Length( inArray[4] ) = 4 )
			urlPath = urlPath & "&" & var & "=" & SubStr( inArray[4], 3, 1 )
		EndIf
	Case( 7 )
		If( Length( inArray[4] ) = 4 )
			urlPath = urlPath & "&" & var & "=" & SubStr( inArray[4], 4, 1 )
		EndIf
	Case( 8 )
		urlPath = urlPath & "&" & var & "=" & inArray[5]
	Case( 9 )
		urlPath = urlPath & "&" & var & "=" & inArray[6]
	Case( 10 )
		urlPath = urlPath & "&" & var & "=" & inArray[7]
	Case( 11 )
		urlPath = urlPath & "&" & var & "=" & inArray[8]
	Case( 12 )
		urlPath = urlPath & "&" & var & "=" & inArray[9]
	EndSwitch
    i = i + 1
EndForEach

# 接続チェック( W-SIM, 無線LAN )
wsim = RegRead("HKLM", "System\State\Phone", "Status")
wlan = RegRead("HKLM", "System\State\Hardware", "WiFi")
While( NOT( wsim OR wlan ) )
	If( Question( \
		"オフライン:^NL^接続を行ってください.", \
		thisName, "RetryCancel" ) = CANCEL )
		Exit
	Else
		wsim = RegRead("HKLM", "System\State\Phone", "Status")
		wlan = RegRead("HKLM", "System\State\Hardware", "WiFi")
	EndIf
EndWhile

# HTMLファイルの取得, 保存
Download( urlPath, htmPath )
text = ReadFile( htmPath )
If( Length( text ) = NULL )
	Exit
EndIf

# HTMLをテキスト用に変換
Call html2text

# TEXTファイルとして保存 → 実行
WriteFile( txtPath, text )
If( Find( text, "間の経路" ) )
	Run( txtPath )
Else
	# 取得失敗 → ブラウザ起動
	If( Question ( \
		"正しく取得できませんでした.^NL^"	& \
		"ログ結果を表示しますか?^NL^^NL^"	& \
		"※ 以下の要因が考えられます.^NL^"	& \
		"(1) 駅名が複数ある(要修正)^NL^"	& \
		"(2) 入力された文字列が不正^NL^", thisName ) )
		Run( txtPath )
	EndIf
EndIf
Exit

# [in] text, [out] text
Sub html2text
	# 処理中カーソルの表示
	ShowWaitCursor

	# "<"で始まり、 ">"で終わる箇所はカット
	buf = ""
	x = Find( text, "<" )
	While( x > 0 )
		If( x > 1 )
			buf = buf & SubStr( text, 1, x - 1 )
		EndIf
		y = Find( text, ">" )
		If( y > x )
			text = SubStr( text, y + 1 )
		EndIf
		x = Find( text, "<" )
	EndWhile
	text = buf

	# 不要な改行, スペースの除去
	buf = ""
	ForEach line in split ( text, "^LF^", 1 )
		If( line ne NULL )
			buf = buf & line & "^LF^"
		EndIf
	EndForEach
	text = buf

	# クリップボードにセット
	If( UseClip )
		SetClipText( text )
	EndIf
EndSub

